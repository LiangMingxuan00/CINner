devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
start.time <- Sys.time();for (i in 1:1000000){a<-runif(1)};end.time<-Sys.time();time.taken<-end.time-start.time;print(time.taken)
start.time <- Sys.time(); a<-runif(1000000);end.time<-Sys.time();time.taken<-end.time-start.time;print(time.taken)
start.time <- Sys.time();for (i in 1:10000000){a<-runif(1)};end.time<-Sys.time();time.taken<-end.time-start.time;print(time.taken)
start.time <- Sys.time(); a<-runif(10000000);end.time<-Sys.time();time.taken<-end.time-start.time;print(time.taken)
no_divisions
no_divisions=10
runif(no_divisions)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
a=c(1,2,3)
a
mat_divisions=a
mat_divisions=rbinc(mat_divisions,a)
mat_divisions=rbind(mat_divisions,a)
mat_divisions
mat_divisions=rbind(mat_divisions,c)
mat_divisions
sum(mat_divisions[,1])
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
start.time <- Sys.time();for (i in 1:1000000){a<-runif(1)};end.time<-Sys.time();time.taken<-end.time-start.time;print(time.taken)
start.time <- Sys.time();a<-runif(1000000);end.time<-Sys.time();time.taken<-end.time-start.time;print(time.taken)
start.time <- Sys.time();for (i in 1:1000000){a<-sample.int(10,size=1)};end.time<-Sys.time();time.taken<-end.time-start.time;print(time.taken)
a<-sample.int(10,size=1)
a
runif(1)*10
ceil(runif(1)*10)
ceiling
ceiling(runif(1)*10)
ceiling(runif(1)*10)
ceiling(runif(1)*10)
ceiling(runif(1)*10)
ceiling(runif(1)*10)
ceiling(runif(1)*10)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
start.time <- Sys.time()
start.time_1<-Sys.time()
time_1
start.time_1
?Sys.time
a<-Sys.time()
a
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_sample                <- package_output[[2]]
sample_genotype_profiles      <- package_sample[[1]]
package_sample_phylogeny      <- package_output[[3]]
phylogeny_clustering_truth    <- package_sample_phylogeny[[1]]
plotHeatmap(sample_genotype_profiles,plotcol="state",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=TRUE)
package_sample                <- package_output[[2]]
sample_genotype_profiles      <- package_sample[[1]]
package_sample_phylogeny      <- package_output[[3]]
phylogeny_clustering_truth    <- package_sample_phylogeny[[1]]
plotHeatmap(sample_genotype_profiles,plotcol="state",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
package_sample                <- package_output[[2]]
sample_genotype_profiles      <- package_sample[[1]]
package_sample_phylogeny      <- package_output[[3]]
phylogeny_clustering_truth    <- package_sample_phylogeny[[1]]
plotHeatmap(sample_genotype_profiles,plotcol="state",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
plotHeatmap(sample_genotype_profiles,plotcol="Min",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_clonal_evolution      <- package_output[[1]]
vec_time                      <- package_clonal_evolution[[13]]
vec_clonal_populations        <- package_clonal_evolution[[16]]
vec_total_population          <- c()
for (i in 1:length(vec_time)){
vec_total_population[i] <- sum(vec_clonal_populations[[i]])
}
vec_time_plot                 <- vec_time[seq(from=1,to=length(vec_time),by=100)]/365
vec_cell_count_sim_plot       <- vec_total_population[seq(from=1,to=length(vec_time),by=100)]
vec_cell_count_exp_plot       <- func_expected_population(365*vec_time_plot)
df                            <- data.frame(vec_time_plot,vec_cell_count_sim_plot,vec_cell_count_exp_plot)
ggplot(df,aes(vec_time_plot)) +
geom_line(aes(y=vec_cell_count_exp_plot),colour="red") +
geom_point(aes(y=vec_cell_count_sim_plot),colour="blue") +
xlim(vec_time_plot[1],vec_time_plot[length(vec_time_plot)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected (red line) vs Simulated (blue dots) dynamics of total cell count")
package_sample                <- package_output[[2]]
sample_genotype_profiles      <- package_sample[[1]]
head(sample_genotype_profiles)
package_sample_phylogeny      <- package_output[[3]]
phylogeny_clustering_truth    <- package_sample_phylogeny[[1]]
plotHeatmap(sample_genotype_profiles,plotcol="state",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
plotHeatmap(sample_genotype_profiles,plotcol="Min",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
plot(phylogeny_clustering_truth$tree)
class(phylogeny_clustering_truth)
class(phylogeny_clustering_truth$tree)
plot(phylogeny_clustering_truth$tree,show.tip.label=FALSE)
plotHeatmap(sample_genotype_profiles,plotcol="Min",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
plotHeatmap(sample_genotype_profiles,plotcol="state",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
barplot(vec_CN_block_no,main="Count of CN bins in each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
barplot(vec_centromere_location,main="Centromere location of each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
start.time <- Sys.time();for (i in 1:1000000){a<-runif(1)};end.time <- Sys.time();time.taken <- end.time - start.time;time.taken
start.time <- Sys.time();for (i in 1:1000000){a<-sample.int(10,size=1)};end.time <- Sys.time();time.taken <- end.time - start.time;time.taken
start.time <- Sys.time();a<-runif(1000000);end.time <- Sys.time();time.taken <- end.time - start.time;time.taken
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
vec_time          <- (T_start_time:100:T_end_time)/365
vec_population    <- func_expected_population(vec_time*365)
df                <- data.frame(vec_time,vec_population)
ggplot(df,aes(vec_time)) +
geom_line(aes(y=vec_population),colour="red") +
xlim(vec_time[1],vec_time[length(vec_time)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected dynamics of total cell count")
cat('age_birth                                                    = ',age_birth,'(years)\n')
cat('age_end                                                      = ',age_end,'(years)\n')
cat('cell_lifespan                                                = ',cell_lifespan,'(days)\n')
cat('N_sample                                                     = ',N_sample,'(cells)\n')
cat('T_tau_step                                                   = ',T_tau_step,'(days)\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplified_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplification_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
vec_time          <- (T_start_time:100:T_end_time)/365
vec_population    <- func_expected_population(vec_time*365)
df                <- data.frame(vec_time,vec_population)
ggplot(df,aes(vec_time)) +
geom_line(aes(y=vec_population),colour="red") +
xlim(vec_time[1],vec_time[length(vec_time)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected dynamics of total cell count")
cat('age_birth                                                    = ',age_birth,'(years)\n')
cat('age_end                                                      = ',age_end,'(years)\n')
cat('cell_lifespan                                                = ',cell_lifespan,'(days)\n')
cat('N_sample                                                     = ',N_sample,'(cells)\n')
cat('T_tau_step                                                   = ',T_tau_step,'(days)\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplified_length,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplification_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
barplot(vec_CN_block_no,main="Count of CN bins in each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
barplot(vec_centromere_location,main="Centromere location of each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_clonal_evolution      <- package_output[[1]]
vec_time                      <- package_clonal_evolution[[13]]
vec_clonal_populations        <- package_clonal_evolution[[16]]
vec_total_population          <- c()
for (i in 1:length(vec_time)){
vec_total_population[i] <- sum(vec_clonal_populations[[i]])
}
vec_time_plot                 <- vec_time[seq(from=1,to=length(vec_time),by=100)]/365
vec_cell_count_sim_plot       <- vec_total_population[seq(from=1,to=length(vec_time),by=100)]
vec_cell_count_exp_plot       <- func_expected_population(365*vec_time_plot)
df                            <- data.frame(vec_time_plot,vec_cell_count_sim_plot,vec_cell_count_exp_plot)
ggplot(df,aes(vec_time_plot)) +
geom_line(aes(y=vec_cell_count_exp_plot),colour="red") +
geom_point(aes(y=vec_cell_count_sim_plot),colour="blue") +
xlim(vec_time_plot[1],vec_time_plot[length(vec_time_plot)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected (red line) vs Simulated (blue dots) dynamics of total cell count")
package_sample                <- package_output[[2]]
sample_genotype_profiles      <- package_sample[[1]]
head(sample_genotype_profiles)
package_sample_phylogeny      <- package_output[[3]]
phylogeny_clustering_truth    <- package_sample_phylogeny[[1]]
plotHeatmap(sample_genotype_profiles,plotcol="state",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
plotHeatmap(sample_genotype_profiles,plotcol="Min",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
plot(phylogeny_clustering_truth$tree,show.tip.label=FALSE)
stage_final                   <- 1
N_simulations                 <- 1
output                        <- TEST_SIMULATIONS_FOR_FIRST_MANUSCRIPT(MODEL,stage_final,N_simulations)
a=matrix(1:10,nrow=2)
a
a[1:2,4:5]=0
a
b<-matrix(-1:-4,nrow=2)
b
a[1:2,4:5]=b
a
a[,2 3]
a[,c(2,3)]
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 2
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
stage_final                   <- 2
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 2
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 2
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_sample                <- package_output[[2]]
sample_genotype_profiles      <- package_sample[[1]]
head(sample_genotype_profiles)
package_sample_phylogeny      <- package_output[[3]]
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
stage_final                   <- 3
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_sample                <- package_output[[2]]
sample_genotype_profiles      <- package_sample[[1]]
head(sample_genotype_profiles)
package_sample_phylogeny      <- package_output[[3]]
phylogeny_clustering_truth    <- package_sample_phylogeny[[1]]
plotHeatmap(sample_genotype_profiles,plotcol="state",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
plotHeatmap(sample_genotype_profiles,plotcol="Min",clusters=phylogeny_clustering_truth$clustering,tree=phylogeny_clustering_truth$tree,reorderclusters=TRUE,plottree=FALSE)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
devtools::load_all()
devtools::document()
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
MODEL <- 'HGSOC-BULK'
SIMULATOR_VARIABLES_for_simulation(MODEL)
MODEL <- 'HGSOC-BULK'
SIMULATOR_VARIABLES_for_simulation(MODEL)
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
MODEL <- 'HGSOC-BULK'
SIMULATOR_VARIABLES_for_simulation(MODEL)
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Probability of interstitial CN-LOH                           = ',prob_CN_cnloh_interstitial,'\n')
cat('Probability of terminal CN-LOH                               = ',prob_CN_cnloh_terminal,'\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Probability of interstitial CN-LOH                           = ',prob_CN_cnloh_interstitial,'\n')
cat('Probability of terminal CN-LOH                               = ',prob_CN_cnloh_terminal,'\n')
MODEL <- 'HGSOC-BULK'
SIMULATOR_VARIABLES_for_simulation(MODEL)
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Probability of interstitial CN-LOH                           = ',prob_CN_cnloh_interstitial,'\n')
cat('Probability of terminal CN-LOH                               = ',prob_CN_cnloh_terminal,'\n')
MODEL <- 'HGSOC-BULK'
SIMULATOR_VARIABLES_for_simulation(MODEL)
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Probability of interstitial CN-LOH                           = ',prob_CN_cnloh_interstitial,'\n')
cat('Probability of terminal CN-LOH                               = ',prob_CN_cnloh_terminal,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplification_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
cat('Geometric parameter for bin length of an interstitial CN-LOH = ',prob_CN_cnloh_interstitial_length,'\n')
cat('Geometric parameter for bin length of a terminal CN-LOH      = ',prob_CN_cnloh_terminal_length,'\n')
MODEL <- 'HGSOC-BULK'
SIMULATOR_VARIABLES_for_simulation(MODEL)
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Probability of interstitial CN-LOH                           = ',prob_CN_cnloh_interstitial,'\n')
cat('Probability of terminal CN-LOH                               = ',prob_CN_cnloh_terminal,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplification_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
cat('Geometric parameter for bin length of an interstitial CN-LOH = ',prob_CN_cnloh_interstitial_length,'\n')
cat('Geometric parameter for bin length of a terminal CN-LOH      = ',prob_CN_cnloh_terminal_length,'\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Probability of interstitial CN-LOH                           = ',prob_CN_cnloh_interstitial,'\n')
cat('Probability of terminal CN-LOH                               = ',prob_CN_cnloh_terminal,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplification_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
cat('Geometric parameter for bin length of an interstitial CN-LOH = ',prob_CN_cnloh_interstitial_length,'\n')
cat('Geometric parameter for bin length of a terminal CN-LOH      = ',prob_CN_cnloh_terminal_length,'\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Probability of interstitial CN-LOH                           = ',prob_CN_cnloh_interstitial,'\n')
cat('Probability of terminal CN-LOH                               = ',prob_CN_cnloh_terminal,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplification_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
cat('Geometric parameter for bin length of an interstitial CN-LOH = ',prob_CN_cnloh_interstitial_length,'\n')
cat('Geometric parameter for bin length of a terminal CN-LOH      = ',prob_CN_cnloh_terminal_length,'\n')
driver_library
driver_library
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Probability of interstitial CN-LOH                           = ',prob_CN_cnloh_interstitial,'\n')
cat('Probability of terminal CN-LOH                               = ',prob_CN_cnloh_terminal,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplification_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
cat('Geometric parameter for bin length of an interstitial CN-LOH = ',prob_CN_cnloh_interstitial_length,'\n')
cat('Geometric parameter for bin length of a terminal CN-LOH      = ',prob_CN_cnloh_terminal_length,'\n')
MODEL <- 'HGSOC-BULK'
SIMULATOR_VARIABLES_for_simulation(MODEL)
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Probability of interstitial CN-LOH                           = ',prob_CN_cnloh_interstitial,'\n')
cat('Probability of terminal CN-LOH                               = ',prob_CN_cnloh_terminal,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplification_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
cat('Geometric parameter for bin length of an interstitial CN-LOH = ',prob_CN_cnloh_interstitial_length,'\n')
cat('Geometric parameter for bin length of a terminal CN-LOH      = ',prob_CN_cnloh_terminal_length,'\n')
