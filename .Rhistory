library(CancerSimulator)
sum_nums()
library(CancerSimulator)
SIMULATOR_VARIABLES_for_simulation
SIMULATOR_VARIABLES_for_simulation()
sum_sums(1,2)
library(CancerSimulator)
sum_sums(1,2)
devtools::document()\
devtools::document()
sum_num()
devtools::document()
devtools::document()
SIMULATOR_FULL_PHASE_1_selection_rate()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
SIMULATOR_FULL_PHASE_1_main()
library(ggplot2)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
library(ggplot2)
rm(list = ls())
path_name <- paste(getwd(),'/',sep='')
print(path_name)
source(paste(path_name,'TEST_SIMULATIONS_FOR_FIRST_MANUSCRIPT.R',sep=''))
library(ggplot2)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
library(ggplot2)
library(CancerSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
library(ggplot2)
library(CancerSimulator)
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
vec_time          <- (T_start_time:100:T_end_time)/365
vec_population    <- func_expected_population(vec_time*365)
df                <- data.frame(vec_time,vec_population)
ggplot(df,aes(vec_time)) +
geom_line(aes(y=vec_population),colour="red") +
xlim(vec_time[1],vec_time[length(vec_time)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected dynamics of total cell count")
cat('age_birth                                                    = ',age_birth,'(years)\n')
cat('age_end                                                      = ',age_end,'(years)\n')
cat('cell_lifespan                                                = ',cell_lifespan,'(days)\n')
cat('N_sample                                                     = ',N_sample,'(years)\n')
cat('T_tau_step                                                   = ',T_tau_step,'(days)\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplified_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
barplot(vec_CN_block_no,main="Count of CN bins in each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
barplot(vec_centromere_location,main="Centromere location of each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
stage_final                   <- 1
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_clonal_evolution      <- package_output[[1]]
vec_time                      <- package_clonal_evolution[[12]]
vec_clonal_populations        <- package_clonal_evolution[[15]]
vec_total_population          <- c()
for (i in 1:length(vec_time)){
vec_total_population[i] <- sum(vec_clonal_populations[[i]])
}
vec_time_plot                 <- vec_time[seq(from=1,to=length(vec_time),by=100)]/365
package_output
package_clonal_evolution
vec_time
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
vec_time          <- (T_start_time:100:T_end_time)/365
vec_population    <- func_expected_population(vec_time*365)
df                <- data.frame(vec_time,vec_population)
ggplot(df,aes(vec_time)) +
geom_line(aes(y=vec_population),colour="red") +
xlim(vec_time[1],vec_time[length(vec_time)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected dynamics of total cell count")
cat('age_birth                                                    = ',age_birth,'(years)\n')
cat('age_end                                                      = ',age_end,'(years)\n')
cat('cell_lifespan                                                = ',cell_lifespan,'(days)\n')
cat('N_sample                                                     = ',N_sample,'(years)\n')
cat('T_tau_step                                                   = ',T_tau_step,'(days)\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplified_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
barplot(vec_CN_block_no,main="Count of CN bins in each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
barplot(vec_centromere_location,main="Centromere location of each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
stage_final                   <- 1
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_clonal_evolution      <- package_output[[1]]
vec_time                      <- package_clonal_evolution[[13]]
vec_clonal_populations        <- package_clonal_evolution[[16]]
vec_total_population          <- c()
for (i in 1:length(vec_time)){
vec_total_population[i] <- sum(vec_clonal_populations[[i]])
}
vec_time_plot                 <- vec_time[seq(from=1,to=length(vec_time),by=100)]/365
vec_cell_count_sim_plot       <- vec_total_population[seq(from=1,to=length(vec_time),by=100)]
vec_cell_count_exp_plot       <- func_expected_population(365*vec_time_plot)
df                            <- data.frame(vec_time_plot,vec_cell_count_sim_plot,vec_cell_count_exp_plot)
ggplot(df,aes(vec_time_plot)) +
geom_line(aes(y=vec_cell_count_exp_plot),colour="red") +
geom_point(aes(y=vec_cell_count_sim_plot),colour="blue") +
xlim(vec_time_plot[1],vec_time_plot[length(vec_time_plot)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected (red line) vs Simulated (blue dots) dynamics of total cell count")
stage_final                   <- 1
N_simulations                 <- 10
output                        <- TEST_SIMULATIONS_FOR_FIRST_MANUSCRIPT(MODEL,stage_final,N_simulations)
stage_final                   <- 1
N_simulations                 <- 10
output                        <- TEST_SIMULATIONS_FOR_FIRST_MANUSCRIPT(MODEL,stage_final,N_simulations)
devtools::document()
library(ggplot2)
library(signals)
library(CancerSimulator)
stage_final                   <- 1
N_simulations                 <- 10
output                        <- TEST_SIMULATIONS_FOR_FIRST_MANUSCRIPT(MODEL,stage_final,N_simulations)
# package_clonal_evolution      <- package_output[[1]]
devtools::document()
devtools::document()
TEST_SIMULATIONS_FOR_FIRST_MANUSCRIPT()
library(CancerSimulator)
install.packages(c("generics", "glue", "pillar", "rlang", "tidyr"))
install.packages(c("generics", "glue", "pillar", "rlang", "tidyr"))
library(ggplot2)
library(signals)
library(CancerSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
devtools::install_github("shahcompbio/signals")
remove.packages("CancerSimulator", lib="~/Library/R/4.0/library")
devtools::install_github("dinhngockhanh/CancerSimulator")
devtools::install_github("dinhngockhanh/CancerSimulator")
SIMULATOR_VARIABLES_for_simulation()
SIMULATOR_VARIABLES_for_simulation()
library(CancerSimulator)
devtools::document()
remove.packages("CancerSimulator", lib="~/Library/R/4.0/library")
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::install_github("dinhngockhanh/CancerSimulator")
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::install_github("dinhngockhanh/CancerSimulator")
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::document()
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
vec_time          <- (T_start_time:100:T_end_time)/365
vec_population    <- func_expected_population(vec_time*365)
df                <- data.frame(vec_time,vec_population)
ggplot(df,aes(vec_time)) +
geom_line(aes(y=vec_population),colour="red") +
xlim(vec_time[1],vec_time[length(vec_time)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected dynamics of total cell count")
library(CancerSimulator)
remove.packages("CancerSimulator", lib="~/Library/R/4.0/library")
devtools::install_github("dinhngockhanh/CancerSimulator")
devtools::document()
library(ggplot2)
library(signals)
library(CancerSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
vec_time          <- (T_start_time:100:T_end_time)/365
vec_population    <- func_expected_population(vec_time*365)
df                <- data.frame(vec_time,vec_population)
ggplot(df,aes(vec_time)) +
geom_line(aes(y=vec_population),colour="red") +
xlim(vec_time[1],vec_time[length(vec_time)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected dynamics of total cell count")
cat('age_birth                                                    = ',age_birth,'(years)\n')
cat('age_end                                                      = ',age_end,'(years)\n')
cat('cell_lifespan                                                = ',cell_lifespan,'(days)\n')
cat('N_sample                                                     = ',N_sample,'(years)\n')
cat('T_tau_step                                                   = ',T_tau_step,'(days)\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplified_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
barplot(vec_CN_block_no,main="Count of CN bins in each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
barplot(vec_centromere_location,main="Centromere location of each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
stage_final                   <- 1
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_clonal_evolution      <- package_output[[1]]
?SIMULATOR_FULL_PROGRAM_one_simulation
??SIMULATOR_FULL_PROGRAM_one_simulation
SIMULATOR_FULL_OUTPUT_for_comparison_between_MATLAB_and_R()
library(CancerSimulator)
devtools::document()
library(ggplot2)
library(signals)
library(CancerSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
library(CancerSimulator)
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::document()
library(CancerSimulator)
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::document()
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
library(CancerSimulator)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
remove.packages("CancerSimulator", lib="~/Library/R/4.0/library")
devtools::install_github("dinhngockhanh/CancerSimulator")
library(CancerSimulator)
library(CancerSimulator)
library(CancerSimulator)
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
SIMULATOR_VARIABLES_for_simulation(MODEL)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::document()
library(CancerSimulator)
devtools::document()
devtools::document()
help(devtools::document)
?? devtools::document
devtools::document(pkg="/Users/dinhngockhanh/CancerSimulator")
devtools::document(pkg="/Users/dinhngockhanh/CancerSimulator/R")
library(CancerSimulator)
devtools::document()
devtools::install_github("dinhngockhanh/CancerSimulator")
devtools::document(pkg="/Users/dinhngockhanh/CancerSimulator/R")
devtools::install_github("dinhngockhanh/CancerSimulator")
SIMULATOR_VARIABLES_for_simulation
SIMULATOR_VARIABLES_for_simulation()
??SIMULATOR_VARIABLES_for_simulation
devtools::install_github("dinhngockhanh/CancerSimulator")
devtools::document()
devtools::install_github("dinhngockhanh/CancerSimulator")
devtools::install_github("dinhngockhanh/CancerSimulator")
SIMULATOR_VARIABLES_for_simulation("K")
library(CancerSimulator)
devtools::document()
devtools::document()
?SIMULATOR_VARIABLES_for_simulation
SIMULATOR_VARIABLES_for_simulation()
devtools::install_github("dinhngockhanh/CancerSimulator")
?CancerSimulator
??CancerSimulator
SIMULATOR_VARIABLES_for_simulation()
devtools::install_github("dinhngockhanh/CancerSimulator")
SIMULATOR_VARIABLES_for_simulation()
?SIMULATOR_VARIABLES_for_simulation
??SIMULATOR_VARIABLES_for_simulation
SIMULATOR_VARIABLES_for_simulation()
library(CancerSimulator)
library(ggplot2)
library(signals)
library(CancerSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
library(ggplot2)
library(signals)
library(CancerSimulator)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::document()
devtools::install_github("dinhngockhanh/CancerSimulator")
SIMULATOR_VARIABLES_for_simulation()
load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
vec_time          <- (T_start_time:100:T_end_time)/365
vec_population    <- func_expected_population(vec_time*365)
df                <- data.frame(vec_time,vec_population)
ggplot(df,aes(vec_time)) +
geom_line(aes(y=vec_population),colour="red") +
xlim(vec_time[1],vec_time[length(vec_time)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected dynamics of total cell count")
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
devtools::load_all()
devtools::document()
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
devtools::install_github("dinhngockhanh/CancerSimulator")
library(ggplot2)
library(signals)
library(CancerSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
warning=FALSE, message=FALSE,
comment = "#>"
)
devtools::load_all()
devtools::document()
MODEL <- 'FALLOPIAN-TUBES-NEUTRAL'
SIMULATOR_VARIABLES_for_simulation(MODEL)
vec_time          <- (T_start_time:100:T_end_time)/365
vec_population    <- func_expected_population(vec_time*365)
df                <- data.frame(vec_time,vec_population)
ggplot(df,aes(vec_time)) +
geom_line(aes(y=vec_population),colour="red") +
xlim(vec_time[1],vec_time[length(vec_time)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected dynamics of total cell count")
cat('age_birth                                                    = ',age_birth,'(years)\n')
cat('age_end                                                      = ',age_end,'(years)\n')
cat('cell_lifespan                                                = ',cell_lifespan,'(days)\n')
cat('N_sample                                                     = ',N_sample,'(years)\n')
cat('T_tau_step                                                   = ',T_tau_step,'(days)\n')
cat('Poisson rate of new driver mutations                         = ',rate_driver,'\n')
cat('Probability of WGD                                           = ',prob_CN_whole_genome_duplication,'\n')
cat('Probability of chromosome missegragation                     = ',prob_CN_missegregation,'\n')
cat('Probability of chromosome-arm missegragation                 = ',prob_CN_chrom_arm_missegregation,'\n')
cat('Probability of focal amplification                           = ',prob_CN_focal_amplification,'\n')
cat('Probability of focal deletion                                = ',prob_CN_focal_deletion,'\n')
cat('Geometric parameter for bin length of a focal amplification  = ',prob_CN_focal_amplified_length,'\n')
cat('Geometric parameter for bin length of a focal deletion       = ',prob_CN_focal_deletion_length,'\n')
barplot(vec_CN_block_no,main="Count of CN bins in each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
barplot(vec_centromere_location,main="Centromere location of each chromosome",xlab="Chromosome",names.arg=c(1:N_chromosomes))
stage_final                   <- 1
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_clonal_evolution      <- package_output[[1]]
vec_time                      <- package_clonal_evolution[[13]]
vec_clonal_populations        <- package_clonal_evolution[[16]]
vec_total_population          <- c()
for (i in 1:length(vec_time)){
vec_total_population[i] <- sum(vec_clonal_populations[[i]])
}
vec_time_plot                 <- vec_time[seq(from=1,to=length(vec_time),by=100)]/365
vec_cell_count_sim_plot       <- vec_total_population[seq(from=1,to=length(vec_time),by=100)]
vec_cell_count_exp_plot       <- func_expected_population(365*vec_time_plot)
df                            <- data.frame(vec_time_plot,vec_cell_count_sim_plot,vec_cell_count_exp_plot)
ggplot(df,aes(vec_time_plot)) +
geom_line(aes(y=vec_cell_count_exp_plot),colour="red") +
geom_point(aes(y=vec_cell_count_sim_plot),colour="blue") +
xlim(vec_time_plot[1],vec_time_plot[length(vec_time_plot)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected (red line) vs Simulated (blue dots) dynamics of total cell count")
stage_final                   <- 1
package_output                <- SIMULATOR_FULL_PROGRAM_one_simulation(MODEL,stage_final)
package_clonal_evolution      <- package_output[[1]]
vec_time                      <- package_clonal_evolution[[13]]
vec_clonal_populations        <- package_clonal_evolution[[16]]
vec_total_population          <- c()
for (i in 1:length(vec_time)){
vec_total_population[i] <- sum(vec_clonal_populations[[i]])
}
vec_time_plot                 <- vec_time[seq(from=1,to=length(vec_time),by=100)]/365
vec_cell_count_sim_plot       <- vec_total_population[seq(from=1,to=length(vec_time),by=100)]
vec_cell_count_exp_plot       <- func_expected_population(365*vec_time_plot)
df                            <- data.frame(vec_time_plot,vec_cell_count_sim_plot,vec_cell_count_exp_plot)
ggplot(df,aes(vec_time_plot)) +
geom_line(aes(y=vec_cell_count_exp_plot),colour="red") +
geom_point(aes(y=vec_cell_count_sim_plot),colour="blue") +
xlim(vec_time_plot[1],vec_time_plot[length(vec_time_plot)]) +
xlab('Age') +
ylab('Cell count') +
ggtitle("Expected (red line) vs Simulated (blue dots) dynamics of total cell count")
stage_final                   <- 1
N_simulations                 <- 10
output                        <- TEST_SIMULATIONS_FOR_FIRST_MANUSCRIPT(MODEL,stage_final,N_simulations)
